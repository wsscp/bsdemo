// Ion.CheckRadio // version 1.0.0, build: 14 // http://ionden.com/a/plugins/ion.CheckRadio/en.html 
(function(d) {
    var k = 0,
    c = {
        init: function() {
            return this.each(function() {
                var a = d(this),
                b,
                f,
                c,
                g,
                l,
                m,
                e,
                h;
                if (!a.data("isActive")) {
                    a.data("isActive", !0);
                    k++;
                    this.pluginCount = k;
                    l = a.prop("type");
                    c = a.prop("disabled");
                    g = a.prop("checked");
                    m = a.prop("name");
                    b = a.parent("label");
                    if (0 < b.length) h = b.text().trim();
                    else if (b = a.prop("id"), b = d("label[for='" + b + "']"), 0 < b.length) h = b.text().trim();
                    else throw Error("Label not found!");
                    a[0].style.display = "none";
                    b[0].style.display = "none";
                    e = c ? g ? '<span class="icr disabled checked" id="icr-' + this.pluginCount + '">': '<span class="icr disabled" id="icr-' + this.pluginCount + '">': g ? '<span class="icr enabled checked" id="icr-' + this.pluginCount + '">': '<span class="icr enabled" id="icr-' + this.pluginCount + '">';
                    e = e + ('<span class="icr__' + l + '"></span>') + ('<span class="icr__text">' + h + "</span>");
                    e += "</span>";
                    b.after(e);
                    f = d("#icr-" + this.pluginCount); (function() {
                        f.on("click",
                        function() {
                            c || (g ? a.prop("checked", !1) : a.prop("checked", !0), d("input[name='" + m + "']").trigger("stateChanged"))
                        });
                        f.on("mousedown",
                        function(a) {
                            a.preventDefault();
                            return ! 1
                        });
                        a.on("stateChanged",
                        function() { (g = a.prop("checked")) ? f.addClass("checked") : f.removeClass("checked")
                        })
                    })()
                }
            })
        }
    };
    d.fn.ionCheckRadio = function(a) {
        return c[a] ? c[a].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" !== typeof a && a ? (d.error("Method " + a + " does not exist for jQuery.ionCheckRadio"), !1) : c.init.apply(this, arguments)
    }
})(jQuery);